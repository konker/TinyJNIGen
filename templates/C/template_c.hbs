/*! DO NOT EDIT THIS FILE: GENERATED BY JNIGen */

#include "{{fname}}.h"
#include "{{fname}}_extern.h"
#include "CHybridApplication.h"
#include "jni_util.h"

#ifdef __cplusplus
extern "C" {
#endif

{{#each methods}}
/* {{.}} */
{{returnTypeMapped}} {{iname}}_{{name}}{{mangle}}({{#unless isStatic}}const jobject thiz{{/unless}}{{#each parameterTypes}}{{#unless isStatic}},{{else}}{{^@first}},{{/first}}{{/unless}}{{typeMapped}} p{{@index}}{{/each}})
{
    {{iname}} *moduleInstance = static_cast<{{iname}}*>(CHybridApplication::getInstance().getInstanceOfModule("{{iname}}"));

    {{#unless isVoid}}return{{/unless}}
    moduleInstance->{{name}}({{#unless isStatic}}thiz{{/unless}}{{#each parameterTypes}}{{#unless isStatic}},{{else}}{{^@first}},{{/first}}{{/unless}}p{{@index}}{{/each}});
}
{{/each}}

#ifdef __cplusplus
}
#endif
